{
  "names": [
    "totally not a virus",
    "virus lol"
  ],
  "boot": [
    "#define pr_fmt(fmt) ringdev: fmt",
    "#include <linux/kernel.h>",
    "#include <linux/module.h>",
    "#include <linux/fs.h>",
    "#include <linux/miscdevice.h>",
    "#include <linux/sched.h>",
    "#include <linux/uaccess.h>",
    "#include <linux/wait.h>\n",
    "#define RINGDEV_MAJOR 0\n\n",
    "wait_queue_head_t queueHead;\n",
    "struct ringdev {",
    "   struct mutex ringdev_lock;",
    "   void *ringdev_buf;",
    "   ssize_t head;",
    "   ssize_t tail;",
    "};",
    "static struct ringdev *ringdev;\n",
    "static int ringdev_open(struct inode *inode struct file *filp)",
    "{",
    "   unsigned int minor=iminor(inode); struct",
    "   ringdev *rdnew  = &ringdev [ 'minor' ] ;",
    "   int  ret;",
    "   mutex_lock(&rdnew->ringdev_lock);",
    "   rdnew->ringdev_buf = kmalloc(4096 GFP_KERNEL);",
    "   rdnew->head = snprintf(rdnew->ringdev_buf, 4096, 'Hello world %d!\n', minor);",
    "   filp->private_data = rdnew;",
    "   mutex_unlock(&rdnew->ringdev_lock);",
    "   return 0;"
  ],
  "settings": [
    "boot_time:2500",
    "difficulty:normal"
  ],
  "data": [
    
  ],
  "events": [
    "getting_hacked;1:chaos:5000:after;"
  ]
}